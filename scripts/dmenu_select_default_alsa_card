#!/bin/bash

# Write ~/.asoundrc with specified card as default.
# and mute all other cards.

for i in dmenu; do
    if ! command -v "$i" >/dev/null 2>&1; then
        die "Missing binary '$i'."
    fi
done

mute_unmute() {
    local action="$1"
    local card="$2"

    if amixer -c "${card}" sget Master >/dev/null 2>&1; then
        control='Master'
    elif amixer -c "${card}" sget PCM >/dev/null 2>&1; then
        control='PCM'
    else
        return 1
    fi

    case "${action}" in
        'mute')
            amixer -c "${card}" -q set "${control}" mute
        ;;
        'unmute')
            amixer -c "${card}" -q set "${control}" unmute
        ;;
    esac
}

dmenu_wrapper() {
    # A magic to position dmenu in the middle of screen.
    read screen_w screen_h < <( xdpyinfo | sed -r '/dimensions:/!d; s/.*dimensions:[[:blank:]]+([0-9]+)x([0-9]+) pixels.*/\1 \2/')
    dmenu_width='500'
    pull_up='140'
    x_offset="$(( (screen_w - dmenu_width) / 2 ))"
    y_offset="$(( (screen_h - pull_up) / 2 ))"

    dmenu -i -l 10 \
        -y "${y_offset}" -x "${x_offset}" -w "${dmenu_width}" \
        -fn 'Droid Sans Mono:pixelsize=15'  \
        -sb '#a13d12' \
        -p "$*"
}

cards() {
    awk -f - /proc/asound/cards <<-'END'
		/^ *[0-9]+/ {
		    card = $1;
			sub(/.*- /, "")
			printf("%s %128s\n", $0, card)
			printf("%s %128s\n", $0 " (no dmix)", card "-nodmix")
		}
	END
}


read dmenu_selection < <(dmenu_wrapper 'Set default ALSA device to:' < <(cards))
dmenu_selection="${dmenu_selection##* }"

if ! [ "${dmenu_selection}" ]; then
	exit 0
fi

if [[ "${dmenu_selection}" =~ -nodmix$ ]]; then
    dmenu_selection="${dmenu_selection%%-*}"
    cat > ~/.asoundrc <<-END
		pcm.!default {
		    type plug
		    slave.pcm hw
		}

	END
else
    : > ~/.asoundrc
fi


cat >> ~/.asoundrc <<END
defaults.pcm.!card ${dmenu_selection}; 
defaults.ctl.!card ${dmenu_selection};
END

while read -r card; do
    card="${card##* }"
    card="${card%%-*}"
    if [ "${card}" = "${dmenu_selection}" ]; then
        mute_unmute unmute "${card}"
    else
        mute_unmute mute "${card}"
    fi
done < <(cards)
